name: CI -> Build & Deploy to Staging

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ECR_REPOSITORY: nextflix
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build:
    name: Build, test and push image
    runs-on: ubuntu-latest

    outputs:
      # Correctly set output name to match the echo command
      IMAGE: ${{ steps.set-image.outputs.IMAGE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & run tests
        run: |
          npm ci
          npm run build || echo "Skipping build"
          npm test || echo "Tests failed or skipped"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push Docker image
        id: set-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          SHORT=${GITHUB_SHA::8}
          IMAGE_TAG="$ECR_REGISTRY/$ECR_REPOSITORY:$SHORT" # Use a different variable name to avoid conflict
          echo "Building $IMAGE_TAG"
          docker build -t "$IMAGE_TAG" .
          docker push "$IMAGE_TAG"
          docker tag "$IMAGE_TAG" "$ECR_REGISTRY/$ECR_REPOSITORY:staging"
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:staging"

          # Set output for deploy step - ensure it matches the 'outputs.IMAGE' definition
          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:staging" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to staging EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          # Removed the 'envs' line, as it's not needed here and can cause confusion
          script: |
            # Reference the output directly within the script
            echo "Deploying ${{ needs.build.outputs.IMAGE }} on staging"
            /opt/nextflix/deploy.sh "${{ needs.build.outputs.IMAGE }}"
