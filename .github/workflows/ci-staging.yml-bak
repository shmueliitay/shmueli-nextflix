name: CI -> Build & Deploy to Staging

on:
  push:
    branches:
      - main   # Trigger only on push to main

permissions:
  id-token: write
  contents: read

env:
  ECR_REPOSITORY: nextflix
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build:
    name: Build, test and push image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install & run tests
        run: |
          npm ci
          npm run build || echo "Skipping build"
          npm test || echo "Tests failed or skipped"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
           SHORT=${GITHUB_SHA::8}
           IMAGE="${{ steps.login-ecr.outputs.registry }}/nextflix:$SHORT"
           docker build -t "$IMAGE" .
           docker push "$IMAGE"
           docker tag "$IMAGE" "${{ steps.login-ecr.outputs.registry }}/nextflix:staging"
           docker push "${{ steps.login-ecr.outputs.registry }}/nextflix:staging"
           echo "IMAGE=${{ steps.login-ecr.outputs.registry }}/nextflix:staging" >> $GITHUB_ENV


  deploy:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to staging EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "Deploying $IMAGE on staging"
            /opt/nextflix/deploy.sh "$IMAGE"

